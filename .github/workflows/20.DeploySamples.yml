name: Deploy Samples

permissions:
  id-token: write
  contents: read

env:
  DEPLOY_ENVIRONMENT: Testms
  AZURE_WEBAPP_NAME: authsample-api-testms-01   # Name of your Azure Web App
  AZURE_WEBAPP_PACKAGE_PATH: './publish'       # Path to the published output
  DOTNET_VERSION: '8.0.x'                      # .NET version to use

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run the workflow'
        required: true
        default: 'Testms'

jobs:
  build:
    runs-on: self-hosted
    steps:
      # Step 1: Checkout the code
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Display dotnet version
        run: dotnet --version

      - name: Set up dependency caching for faster builds
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      # Step 3: Restore dependencies and build the Samples solution/project
      # If you have a solution file for Samples, reference it; otherwise, iterate over sample projects
      - name: Restore Samples
        run: dotnet restore src/Diginsight.Components.sln

      - name: Build Samples
        run: dotnet build src/Diginsight.Components.sln --configuration Release

      - name: Publish AuthenticationSampleApi
        run:  dotnet publish src/Samples/AuthenticationSampleApi/AuthenticationSampleApi.csproj --configuration Release --framework net8.0 --output ./publish
      - name: Publish AuthenticationSampleServerApi
        run:  dotnet publish src/Samples/AuthenticationSampleServerApi/AuthenticationSampleServerApi.csproj --configuration Release --framework net8.0 --output ./publish
      - name: Publish AuthenticationSampleClient
        run:  dotnet publish src/Samples/AuthenticationSampleClient/AuthenticationSampleClient.csproj --configuration Release --framework net8.0-windows --output ./publish

      # Step 5: Upload the published output as an artifact (if you want to persist the build)
      - name: Upload Published Samples
        uses: actions/upload-artifact@v4
        with:
          name: published-samples
          path: publish

  deploy:
    uses: ./.github/workflows/21.DeployAppService.yml
    with:
      environment: ${{ github.event.inputs.environment }}
      webAppName: ${{ env.AZURE_WEBAPP_NAME }}

